{"version":3,"sources":["features/player/isaak_sprite.png","config/constants.js","features/player/reducer.js","config/store.js","features/player/index.js","features/player/movement.js","features/map/index.js","features/world/index.js","App.js","index.js"],"names":["module","exports","HEAD_SPRITE_COORD","initialState","direction","position","sprite","last_sprite_update_time","Infinity","X","Y","rootReducer","combineReducers","player","state","action","type","payload","store","createStore","composeWithDevTools","updatePlayerByGameLoop","new_time","old_time","getState","new_player_position","time_step","oldPos","getNewPlayerPosition","dispatch","updatePlayerSprite","console","log","connect","dispatchMove","window","addEventListener","e","preventDefault","keyCode","handleKeyDown","includes","handleKeyUp","handleMovement","props","style","backgroundSize","top","left","backgroundImage","walkSprite","backgroundPosition","width","height","Map","backgroundColor","gameLoop","Date","getTime","update","requestAnimationFrame","World","useEffect","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7556cd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/isaak_sprite.17b2dfe5.png\";","export const HEAD_SPRITE_SIZE = 40;\nexport const PLAYER_SPEED = 13;\n\n\nexport const HEAD_UPDATE_SPRITE_RATE = 5; // times in second\nexport const HEAD_SPRITE_NUMBER = 2;\nexport const HEAD_SPRITE_COORD = {\n    \"WEST\": [-357, -40],\n    \"NORTH\": [-243, -40],\n    \"EAST\": [-129, -40],\n    \"SOUTH\": [-15, -40],\n}","import { HEAD_SPRITE_COORD } from '../../config/constants';\n\nconst initialState = {\n    direction: \"\",\n    position: [0, 0],\n    sprite: {\n        last_sprite_update_time: -Infinity,\n        X: HEAD_SPRITE_COORD['SOUTH'][0],\n        Y: HEAD_SPRITE_COORD['SOUTH'][1],\n    }\n}\n\nexport const playerReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case 'MOVE_PLAYER':\n            return {\n                ...action.payload\n            }\n        default:\n            return state\n    }\n};","import { createStore, combineReducers } from 'redux'\nimport { playerReducer } from '../features/player/reducer'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst rootReducer = combineReducers({\n    player: playerReducer,\n})\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(),    \n)","import React from 'react';\nimport walkSprite from './isaak_sprite.png';\nimport { connect } from 'react-redux'\nimport { HEAD_SPRITE_SIZE, HEAD_SPRITE_NUMBER, HEAD_SPRITE_COORD, HEAD_UPDATE_SPRITE_RATE } from '../../config/constants';\nimport handleMovement, { getNewPlayerPosition } from './movement'\nimport { store } from '../../config/store';\n\nexport function updatePlayerByGameLoop(new_time, old_time) {\n    const player = store.getState().player;\n    let new_player_position = getNewPlayerPosition(new_time - old_time);\n\n    store.dispatch({\n        type: 'MOVE_PLAYER',\n        payload: {\n            direction: player.direction,\n            position: new_player_position,\n            sprite: updatePlayerSprite(new_time),\n        }\n    });\n}\n\nfunction updatePlayerSprite(new_time) {\n    const player = store.getState().player;\n    if( player.direction != \"\" && new_time - player.sprite.last_sprite_update_time > 1 / HEAD_UPDATE_SPRITE_RATE * 1000 ) {\n        console.log(HEAD_SPRITE_COORD + \", \" + player.direction + \", \" + new_time);\n        return {\n            last_sprite_update_time: new_time,\n            X: player.sprite.X <= HEAD_SPRITE_COORD[player.direction][0] - (HEAD_SPRITE_SIZE + 17) ? HEAD_SPRITE_COORD[player.direction][0] : (player.sprite.X - HEAD_SPRITE_SIZE - 17),\n            Y: HEAD_SPRITE_COORD[player.direction][1],\n        }\n    }\n    return player.sprite;\n}\n\nfunction Player(props) {\n    return (\n        <div style={{\n            position: 'absolute',\n            backgroundSize: '1500px 1500px',\n            top: props.position[1],\n            left: props.position[0],\n            backgroundImage: `url('${walkSprite}')`,\n            backgroundPosition: `${props.sprite.X}px ${props.sprite.Y}px`,\n            width: `${HEAD_SPRITE_SIZE}px`,\n            height: `${HEAD_SPRITE_SIZE}px`,\n        }}\n        />\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        ...state.player\n    }\n}\n\nexport default connect(mapStateToProps)(handleMovement(Player))\n\n","import { store } from '../../config/store'\nimport { PLAYER_SPEED, HEAD_SPRITE_COORD } from '../../config/constants';\n\nexport default function handleMovement(player) {\n\n    function dispatchMove(direction) {\n        store.dispatch({\n            type: 'MOVE_PLAYER',\n            payload: {\n                direction: direction,\n                position: store.getState().player.position,\n                sprite: !direction && store.getState().player.direction? {\n                    last_sprite_update_time: -Infinity,\n                    X: HEAD_SPRITE_COORD[store.getState().player.direction][0],\n                    Y: HEAD_SPRITE_COORD[store.getState().player.direction][1],\n                } : store.getState().player.sprite,\n            }\n        });\n    }\n\n    function handleKeyDown(e) {\n        e.preventDefault()\n        switch(e.keyCode) {\n            // left\n            case 37:\n                return dispatchMove('WEST')\n            case 38:\n                return dispatchMove('NORTH')\n            case 39:\n                return dispatchMove('EAST')\n            case 40:\n                return dispatchMove('SOUTH')\n            default:\n                console.log(e.keyCode)\n\n        }\n    }\n\n    function handleKeyUp(e) {\n        e.preventDefault()\n        if( [37, 38, 39, 40].includes(e.keyCode) ){\n            return dispatchMove(''); // key was released\n        }\n    }\n\n    window.addEventListener('keydown', (e) => {\n        handleKeyDown(e)\n    })\n\n    window.addEventListener('keyup', (e) => {\n        handleKeyUp(e)\n    })\n    return player\n}\n\nexport function getNewPlayerPosition(time_step) {\n    const oldPos = store.getState().player.position;\n    switch(store.getState().player.direction) {\n        case 'WEST':\n            return [ oldPos[0]-PLAYER_SPEED * time_step / 50, oldPos[1] ]\n        case 'EAST':\n            return [ oldPos[0]+PLAYER_SPEED * time_step / 50, oldPos[1] ]\n        case 'NORTH':\n            return [ oldPos[0], oldPos[1]-PLAYER_SPEED * time_step / 50 ]\n        case 'SOUTH':\n            return [ oldPos[0], oldPos[1]+PLAYER_SPEED * time_step / 50 ]\n        default:\n            return [ oldPos[0], oldPos[1] ]\n    }\n}","import React from 'react'\n\nfunction Map(props) {\n    return (\n        <div \n            style={{\n                position: 'relative',\n                top: '0px',\n                left: '0px',\n                width: '800px',\n                height: '600px',\n                backgroundColor: 'black',\n            }}\n        />\n    )\n}\n\nexport default Map\n\n","import React, { useEffect } from 'react';\nimport { store } from '../../config/store'\nimport Player from '../player/index';\nimport Map from '../map/index'\nimport player from '../player/index';\nimport { updatePlayerByGameLoop } from '../player/index.js';\n\nlet secondsPassed = 0;\n\nfunction update(new_time, old_time) {\n    updatePlayerByGameLoop(new_time, old_time);\n}\n\n\nfunction gameLoop(old_time){\n    // Calculate how much time has passed\n    const new_time = new Date().getTime()\n\n    // Pass the time to the update\n    update(new_time, old_time);\n    window.requestAnimationFrame(() => {gameLoop(new_time)});\n}\nwindow.requestAnimationFrame(() => {gameLoop(-Infinity)});\n\nfunction World(props) {\n    useEffect(() => {\n    });\n    return (\n        <div\n            style={{\n                position: \"relative\",\n                width: '800px',\n                height: '800px',\n                margin: '20px auto',\n            }}>\n            <Map />\n            <Player />\n        </div>\n    )\n}\n\nexport default World","import React from 'react';\nimport './App.css';\nimport World from './features/world/index';\n\nfunction App() {\n  return (\n    <div>\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport { store } from './config/store';\n\nReactDOM.render(\n  <Provider store={store}> <App /> </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}